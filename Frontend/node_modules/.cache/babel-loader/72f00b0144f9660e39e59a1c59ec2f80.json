{"ast":null,"code":"// This module is compiled away!\n//\n// While micromark works based on character codes, this module includes the\n// string versions of ’em.\n// The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n// are available here.\nexport const values = {\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n};","map":{"version":3,"names":["values","ht","lf","cr","space","exclamationMark","quotationMark","numberSign","dollarSign","percentSign","ampersand","apostrophe","leftParenthesis","rightParenthesis","asterisk","plusSign","comma","dash","dot","slash","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","colon","semicolon","lessThan","equalsTo","greaterThan","questionMark","atSign","uppercaseA","uppercaseB","uppercaseC","uppercaseD","uppercaseE","uppercaseF","uppercaseG","uppercaseH","uppercaseI","uppercaseJ","uppercaseK","uppercaseL","uppercaseM","uppercaseN","uppercaseO","uppercaseP","uppercaseQ","uppercaseR","uppercaseS","uppercaseT","uppercaseU","uppercaseV","uppercaseW","uppercaseX","uppercaseY","uppercaseZ","leftSquareBracket","backslash","rightSquareBracket","caret","underscore","graveAccent","lowercaseA","lowercaseB","lowercaseC","lowercaseD","lowercaseE","lowercaseF","lowercaseG","lowercaseH","lowercaseI","lowercaseJ","lowercaseK","lowercaseL","lowercaseM","lowercaseN","lowercaseO","lowercaseP","lowercaseQ","lowercaseR","lowercaseS","lowercaseT","lowercaseU","lowercaseV","lowercaseW","lowercaseX","lowercaseY","lowercaseZ","leftCurlyBrace","verticalBar","rightCurlyBrace","tilde","replacementCharacter"],"sources":["C:/Users/hecto/source/repos/React-Projects/covered/Covered/node_modules/micromark-util-symbol/values.js"],"sourcesContent":["// This module is compiled away!\n//\n// While micromark works based on character codes, this module includes the\n// string versions of ’em.\n// The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n// are available here.\nexport const values = {\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}