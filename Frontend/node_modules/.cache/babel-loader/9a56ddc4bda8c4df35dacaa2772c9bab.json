{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/hecto/source/repos/React-Projects/covered/Covered/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/hecto/source/repos/React-Projects/covered/Covered/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/hecto/source/repos/React-Projects/covered/Covered/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import axios from'axios';import{useAppSelector}from'../Hooks/hooks';import ReactMarkdown from'react-markdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Result(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),result=_useState4[0],setResult=_useState4[1];var userData=useAppSelector(function(state){return state.userData;});var skills=useAppSelector(function(state){return state.skills;});useEffect(function(){var generateCoverLetter=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var skillsString,prompt,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:skillsString=skills.join(', ');prompt='';if(userData.education==='None'){prompt=\"Generate cover letter for a \".concat(userData.position,\" position at \").concat(userData.companyName,\". The name of the applicant is \").concat(userData.name,\", they are from \").concat(userData.location,\". Skills include . Letter is addressed to \").concat(userData.companyName,\" Hiring Committee. Candidate is skilled in: \").concat(skillsString,\".\");}else if(userData.education==='High School Degree'){prompt=\"Generate cover letter for a \".concat(userData.position,\" position at \").concat(userData.companyName,\". The name of the applicant is \").concat(userData.name,\", they are from \").concat(userData.location,\". The applicant education is a \").concat(userData.education,\" from \").concat(userData.schoolName,\". Skills include . Letter is addressed to \").concat(userData.companyName,\" Hiring Committee. Candidate is skilled in: \").concat(skillsString,\".\");}else if(userData.education===\"Bachelor's Degree\"||userData.education===\"PhD\"){prompt=\"Generate cover letter for a \".concat(userData.position,\" position at \").concat(userData.companyName,\". The name of the applicant is \").concat(userData.name,\", they are from \").concat(userData.location,\". The applicant education is a \").concat(userData.education,\" in \").concat(userData.degree,\" from \").concat(userData.schoolName,\". Skills include . Letter is addressed to \").concat(userData.companyName,\" Hiring Committee. Candidate is skilled in: \").concat(skillsString,\".\");}_context.next=5;return axios.post(\"https://api.openai.com/v1/completions\",{\"model\":\"text-davinci-003\",\"prompt\":prompt,\"max_tokens\":1500},{headers:{Authorization:\"Bearer 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\"}});case 5:result=_context.sent;console.log(result.data.choices[0].text);setResult(result.data.choices[0].text);case 8:case\"end\":return _context.stop();}}},_callee);}));return function generateCoverLetter(){return _ref.apply(this,arguments);};}();generateCoverLetter().then(function(){setIsLoading(false);console.log(\"success\");});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"home-width p-3\",children:[/*#__PURE__*/_jsx(\"hr\",{}),isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading... (This could take up to a minute)\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Result\"}),/*#__PURE__*/_jsx(ReactMarkdown,{children:result})]})]});}","map":{"version":3,"names":["React","useEffect","useState","axios","useAppSelector","ReactMarkdown","Result","isLoading","setIsLoading","result","setResult","userData","state","skills","generateCoverLetter","skillsString","join","prompt","education","position","companyName","name","location","schoolName","degree","post","headers","Authorization","console","log","data","choices","text","then"],"sources":["C:/Users/hecto/source/repos/React-Projects/covered/Covered/src/Views/Result.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useAppSelector } from '../Hooks/hooks';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nexport default function Result() {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [result, setResult] = useState('')\r\n    const userData = useAppSelector(state => state.userData);\r\n    const skills = useAppSelector(state => state.skills);\r\n    useEffect(() => {\r\n\r\n        const generateCoverLetter = async () => {\r\n\r\n            const skillsString = skills.join(', ')\r\n            let prompt = ''\r\n            if (userData.education === 'None') {\r\n                prompt = `Generate cover letter for a ${userData.position} position at ${userData.companyName}. The name of the applicant is ${userData.name}, they are from ${userData.location}. Skills include . Letter is addressed to ${userData.companyName} Hiring Committee. Candidate is skilled in: ${skillsString}.`\r\n            }\r\n            else if (userData.education === 'High School Degree') {\r\n                prompt = `Generate cover letter for a ${userData.position} position at ${userData.companyName}. The name of the applicant is ${userData.name}, they are from ${userData.location}. The applicant education is a ${userData.education} from ${userData.schoolName}. Skills include . Letter is addressed to ${userData.companyName} Hiring Committee. Candidate is skilled in: ${skillsString}.`\r\n            }\r\n            else if (userData.education === \"Bachelor's Degree\" || userData.education === \"PhD\") {\r\n                prompt = `Generate cover letter for a ${userData.position} position at ${userData.companyName}. The name of the applicant is ${userData.name}, they are from ${userData.location}. The applicant education is a ${userData.education} in ${userData.degree} from ${userData.schoolName}. Skills include . Letter is addressed to ${userData.companyName} Hiring Committee. Candidate is skilled in: ${skillsString}.`\r\n            }\r\n\r\n            const result = await axios.post(\r\n                \"https://api.openai.com/v1/completions\",\r\n                {\r\n                    \"model\": \"text-davinci-003\",\r\n                    \"prompt\": prompt,\r\n                    \"max_tokens\": 1500\r\n                },\r\n                {\r\n                    headers: { Authorization: `Bearer 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` }\r\n                }\r\n            )\r\n            console.log(result.data.choices[0].text)\r\n            setResult(result.data.choices[0].text)\r\n        }\r\n        generateCoverLetter().then(() => {\r\n            setIsLoading(false)\r\n            console.log(\"success\")\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='home-width p-3'>\r\n            <hr></hr>\r\n            {\r\n                isLoading ? <p>Loading... (This could take up to a minute)</p> :\r\n                    <>\r\n                        <h1 className='text-center'>Result</h1>\r\n                        <ReactMarkdown>{result}</ReactMarkdown>\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}