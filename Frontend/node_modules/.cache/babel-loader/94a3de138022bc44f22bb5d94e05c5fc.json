{"ast":null,"code":"import _toConsumableArray from \"C:/Users/hecto/source/repos/React-Projects/covered/Covered/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { visit } from 'unist-util-visit';\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\n\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError('Only one of `allowedElements` and `disallowedElements` should be defined');\n  }\n\n  if (options.allowedElements || options.disallowedElements || options.allowElement) {\n    return function (tree) {\n      visit(tree, 'element', function (node, index, parent_) {\n        var parent =\n        /** @type {Element|Root} */\n        parent_;\n        /** @type {boolean|undefined} */\n\n        var remove;\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName);\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName);\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent);\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            var _parent$children;\n\n            (_parent$children = parent.children).splice.apply(_parent$children, [index, 1].concat(_toConsumableArray(node.children)));\n          } else {\n            parent.children.splice(index, 1);\n          }\n\n          return index;\n        }\n\n        return undefined;\n      });\n    };\n  }\n}","map":{"version":3,"names":["visit","rehypeFilter","options","allowedElements","disallowedElements","TypeError","allowElement","tree","node","index","parent_","parent","remove","includes","tagName","unwrapDisallowed","children","splice","undefined"],"sources":["C:/Users/hecto/source/repos/React-Projects/covered/Covered/node_modules/react-markdown/lib/rehype-filter.js"],"sourcesContent":["import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,kBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;EAC5C,IAAIA,OAAO,CAACC,eAAR,IAA2BD,OAAO,CAACE,kBAAvC,EAA2D;IACzD,MAAM,IAAIC,SAAJ,CACJ,0EADI,CAAN;EAGD;;EAED,IACEH,OAAO,CAACC,eAAR,IACAD,OAAO,CAACE,kBADR,IAEAF,OAAO,CAACI,YAHV,EAIE;IACA,OAAO,UAACC,IAAD,EAAU;MACfP,KAAK,CAACO,IAAD,EAAO,SAAP,EAAkB,UAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAA0B;QAC/C,IAAMC,MAAM;QAAG;QAA6BD,OAA5C;QACA;;QACA,IAAIE,MAAJ;;QAEA,IAAIV,OAAO,CAACC,eAAZ,EAA6B;UAC3BS,MAAM,GAAG,CAACV,OAAO,CAACC,eAAR,CAAwBU,QAAxB,CAAiCL,IAAI,CAACM,OAAtC,CAAV;QACD,CAFD,MAEO,IAAIZ,OAAO,CAACE,kBAAZ,EAAgC;UACrCQ,MAAM,GAAGV,OAAO,CAACE,kBAAR,CAA2BS,QAA3B,CAAoCL,IAAI,CAACM,OAAzC,CAAT;QACD;;QAED,IAAI,CAACF,MAAD,IAAWV,OAAO,CAACI,YAAnB,IAAmC,OAAOG,KAAP,KAAiB,QAAxD,EAAkE;UAChEG,MAAM,GAAG,CAACV,OAAO,CAACI,YAAR,CAAqBE,IAArB,EAA2BC,KAA3B,EAAkCE,MAAlC,CAAV;QACD;;QAED,IAAIC,MAAM,IAAI,OAAOH,KAAP,KAAiB,QAA/B,EAAyC;UACvC,IAAIP,OAAO,CAACa,gBAAR,IAA4BP,IAAI,CAACQ,QAArC,EAA+C;YAAA;;YAC7C,oBAAAL,MAAM,CAACK,QAAP,EAAgBC,MAAhB,0BAAuBR,KAAvB,EAA8B,CAA9B,4BAAoCD,IAAI,CAACQ,QAAzC;UACD,CAFD,MAEO;YACLL,MAAM,CAACK,QAAP,CAAgBC,MAAhB,CAAuBR,KAAvB,EAA8B,CAA9B;UACD;;UAED,OAAOA,KAAP;QACD;;QAED,OAAOS,SAAP;MACD,CA1BI,CAAL;IA2BD,CA5BD;EA6BD;AACF"},"metadata":{},"sourceType":"module"}