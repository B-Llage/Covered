{"ast":null,"code":"import { values } from 'micromark-util-symbol/values.js';\n/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeIdentifier(value) {\n  return value // Collapse Markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, values.space) // Trim.\n  .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","map":{"version":3,"names":["values","normalizeIdentifier","value","replace","space","toLowerCase","toUpperCase"],"sources":["C:/Users/hecto/source/repos/React-Projects/covered/node_modules/micromark-util-normalize-identifier/dev/index.js"],"sourcesContent":["import {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,iCAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;EACzC,OACEA,KAAK,CACH;EADG,CAEFC,OAFH,CAEW,aAFX,EAE0BH,MAAM,CAACI,KAFjC,EAGE;EAHF,CAIGD,OAJH,CAIW,QAJX,EAIqB,EAJrB,EAKE;EACA;EACA;EACA;EACA;EACA;EAVF,CAWGE,WAXH,GAYGC,WAZH,EADF;AAeD"},"metadata":{},"sourceType":"module"}